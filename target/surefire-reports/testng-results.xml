<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-04T14:40:17 IST" name="Suite" finished-at="2021-01-04T14:43:01 IST" duration-ms="164257">
    <groups>
    </groups>
    <test started-at="2021-01-04T14:40:17 IST" name="FirstTest" finished-at="2021-01-04T14:40:44 IST" duration-ms="27498">
      <class name="MyFramework.VerifyCart">
        <test-method is-config="true" signature="getPage()[pri:0, instance:MyFramework.VerifyCart@46f699d5]" started-at="2021-01-04T14:40:17 IST" name="getPage" finished-at="2021-01-04T14:40:37 IST" duration-ms="20308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPage -->
        <test-method signature="cartVerification()[pri:0, instance:MyFramework.VerifyCart@46f699d5]" started-at="2021-01-04T14:40:37 IST" name="cartVerification" finished-at="2021-01-04T14:40:43 IST" duration-ms="6406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartVerification -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:MyFramework.VerifyCart@46f699d5]" started-at="2021-01-04T14:40:44 IST" name="tearDown" finished-at="2021-01-04T14:40:44 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- MyFramework.VerifyCart -->
    </test> <!-- FirstTest -->
    <test started-at="2021-01-04T14:40:45 IST" name="SecondTest" finished-at="2021-01-04T14:43:01 IST" duration-ms="136052">
      <class name="MyFramework.GetSelectedItemCost">
        <test-method is-config="true" signature="getSite()[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:40:45 IST" name="getSite" finished-at="2021-01-04T14:41:01 IST" duration-ms="15679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSite -->
        <test-method signature="getItems(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:41:01 IST" name="getItems" data-provider="itemsForSearch" finished-at="2021-01-04T14:41:30 IST" duration-ms="29436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[redmi 8 pro]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[redmi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getItems -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:41:31 IST" name="tearDown" finished-at="2021-01-04T14:41:31 IST" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getSite()[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:41:31 IST" name="getSite" finished-at="2021-01-04T14:41:42 IST" duration-ms="10582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSite -->
        <test-method signature="getItems(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:41:42 IST" name="getItems" data-provider="itemsForSearch" finished-at="2021-01-04T14:41:58 IST" duration-ms="16065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HP Laptops]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[HP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getItems -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:41:58 IST" name="tearDown" finished-at="2021-01-04T14:41:59 IST" duration-ms="609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getSite()[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:41:59 IST" name="getSite" finished-at="2021-01-04T14:42:10 IST" duration-ms="10999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSite -->
        <test-method signature="getItems(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:42:10 IST" name="getItems" data-provider="itemsForSearch" finished-at="2021-01-04T14:42:34 IST" duration-ms="24145" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Apple]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#priceblock_ourprice"}
  (Session info: headless chrome=87.0.4280.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-C0DB26CP', ip: '192.168.43.139', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\sathi\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54627}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: b0af4a1ec2c6ccd5257ab796465101df
*** Element info: {Using=id, value=priceblock_ourprice}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#priceblock_ourprice"}
  (Session info: headless chrome=87.0.4280.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-C0DB26CP', ip: '192.168.43.139', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\sathi\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54627}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: b0af4a1ec2c6ccd5257ab796465101df
*** Element info: {Using=id, value=priceblock_ourprice}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy26.getText(Unknown Source)
at pageObject.ProductPage.display(ProductPage.java:28)
at MyFramework.GetSelectedItemCost.getItems(GetSelectedItemCost.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getItems -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:42:35 IST" name="tearDown" finished-at="2021-01-04T14:42:35 IST" duration-ms="629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getSite()[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:42:35 IST" name="getSite" finished-at="2021-01-04T14:42:45 IST" duration-ms="9883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSite -->
        <test-method signature="getItems(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:42:45 IST" name="getItems" data-provider="itemsForSearch" finished-at="2021-01-04T14:43:00 IST" duration-ms="14383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[desktop]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Lenevo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getItems -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:MyFramework.GetSelectedItemCost@545de5a4]" started-at="2021-01-04T14:43:00 IST" name="tearDown" finished-at="2021-01-04T14:43:01 IST" duration-ms="587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- MyFramework.GetSelectedItemCost -->
    </test> <!-- SecondTest -->
  </suite> <!-- Suite -->
</testng-results>
